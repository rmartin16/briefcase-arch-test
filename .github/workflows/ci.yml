name: Build App

on:
  schedule:
    - cron: 16 8 * * *
  push:
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

env:
  FORCE_COLOR: 1
  APP_NAME: Verify App
  APP_DIR: verifyapp
  GUI_INPUT: 1
  SETUP_VENV: >
    rm -rf venv && python3 -m venv venv && source venv/bin/activate &&
    python -m pip -q install --upgrade pip setuptools wheel &&
    python -m pip -q install --upgrade --upgrade-strategy eager git+https://github.com/beeware/briefcase
  PRINT_INPUTS: printf "%s\n%s\n\n\n\n\n\n\n\n%s\n" "$APP_NAME" "$APP_DIR" "$GUI_INPUT"
  CREATE_PROJECT: rm -rf "$APP_DIR" && eval $PRINT_INPUTS | briefcase new && cd "$APP_DIR"

jobs:
  build:
    name: App Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        arch: [ aarch64, armv7, armv6 ]
    steps:

      - name: Build Linux System (${{ matrix.arch }})
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: ${{ matrix.arch }}
          distro: bullseye
          githubToken: ${{ github.token }}
          shell: /bin/bash
          env: |
            APP_NAME: ${{ env.APP_NAME }}
            APP_DIR: ${{ env.APP_DIR }}
            GUI_INPUT: ${{ env.GUI_INPUT }}
            SETUP_VENV: ${{ env.SETUP_VENV }}
            PRINT_INPUTS: ${{ env.PRINT_INPUTS }}
            CREATE_PROJECT: ${{ env.CREATE_PROJECT }}
          install: |
            apt -y update
            apt -y install --no-install-recommends \
              git gcc python3-dev python3-pip python3-venv libcairo2-dev libgirepository1.0-dev
          run: |
            set -x && echo $(pwd)

            eval $SETUP_VENV
            eval $CREATE_PROJECT

            briefcase create linux system | cat
            briefcase build linux system | cat
            briefcase package linux system | cat

      - name: Build Web Static (${{ matrix.arch }})
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: ${{ matrix.arch }}
          distro: bullseye
          githubToken: ${{ github.token }}
          shell: /bin/bash
          env: |
            APP_NAME: ${{ env.APP_NAME }}
            APP_DIR: ${{ env.APP_DIR }}
            GUI_INPUT: ${{ env.GUI_INPUT }}
            SETUP_VENV: ${{ env.SETUP_VENV }}
            PRINT_INPUTS: ${{ env.PRINT_INPUTS }}
            CREATE_PROJECT: ${{ env.CREATE_PROJECT }}
          install: |
            apt -y update
            apt -y install --no-install-recommends git gcc python3-dev python3-pip python3-venv
          run: |
            set -x && echo $(pwd)

            eval $SETUP_VENV
            eval $CREATE_PROJECT

            briefcase create web static | cat
            briefcase build web static | cat
            briefcase package web static | cat

  build-self-hosted:
    name: App Build (aarch64 self-hosted)
    runs-on: [self-hosted, linux, ARM64]
    env:
      PIP_CACHE_DIR: /runner/pip.cache
      JAVA_HOME: /runner/java17
      ANDROID_HOME: /runner/android_sdk
      BRIEFCASE_HOME: /runner/briefcase
    steps:
      # these are currently already exist in the docker image
      #- name: Install Prerequisites
      #  run: |
      #    sudo apt update
      #    sudo apt install -y --no-install-recommends python3-dev python3-venv

      - name: Setup Virtual Environment
        run: eval $SETUP_VENV

      - name: Build Linux System App (RPM, Docker)
        # use the bind mount so docker-in-docker works
        working-directory: /runner/work/briefcase-arch-test/briefcase-arch-test/
        run: |
          set -x && echo $(pwd)

          source venv/bin/activate
          eval $CREATE_PROJECT

          briefcase create linux system --target fedora:39
          briefcase build linux system --target fedora:39
          briefcase package linux system --target fedora:39

      - name: Install Android SDK
        run: |
          set -x && echo $(pwd)
          mkdir -p "$ANDROID_HOME"
          git config --global --add safe.directory "$ANDROID_HOME"
          if [ -z "$(ls -A $ANDROID_HOME/.git)" ]; then
            rm -rf "$ANDROID_HOME"
            git clone https://github.com/rmartin16/briefcase-android-sdk-aarch64.git "$ANDROID_HOME"
          fi
          cd "$ANDROID_HOME"
          git pull origin main

      - name: Build Android App
        run: |
          set -x && echo $(pwd)

          source venv/bin/activate
          eval $CREATE_PROJECT

          briefcase create android
          echo "android.aapt2FromMavenOverride=$ANDROID_HOME/build-tools/aapt2" \
            >> ./build/$APP_DIR/android/gradle/gradle.properties
          briefcase build android
          briefcase package android

      - name: Build Linux Flatpak App
        run: |
          set -x && echo $(pwd)

          sudo apt -y update
          sudo apt -y install --no-install-recommends elfutils flatpak flatpak-builder

          source venv/bin/activate
          eval $CREATE_PROJECT

          briefcase create linux flatpak
          briefcase build linux flatpak
          briefcase package linux flatpak
