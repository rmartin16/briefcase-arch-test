name: Build App

on:
  schedule:
    - cron: 16 8 * * *
  push:
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

env:
  FORCE_COLOR: 1
  APP_NAME: Verify App
  APP_DIR: verifyapp
  GUI_INPUT: Toga Automation
  VENV_DIR: /runner/work/briefcase-arch-test/briefcase-arch-test/venv
  SETUP_VENV: >
    rm -rf "$VENV_DIR" && python3 -m venv "$VENV_DIR" && source "$VENV_DIR/bin/activate" &&
    python -m pip config set global.extra-index-url https://www.piwheels.org/simple &&
    python -m pip -q install --upgrade pip setuptools wheel &&
    python -m pip -q install --upgrade --upgrade-strategy eager
      git+https://github.com/beeware/briefcase
      git+https://github.com/beeware/briefcase#subdirectory=automation
  CREATE_PROJECT: >
    rm -rf "$APP_DIR" &&
    briefcase new --no-input -Q "formal_name=$APP_NAME" -Q "app_name=$APP_DIR" -Q "bootstrap=$GUI_INPUT" &&
    cd "$APP_DIR"
  SUPPORT_PACKAGE_LOC: https://github.com/rmartin16/python-standalone-releases/releases/download/continuous

jobs:
  build:
    name: App Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        arch: [ aarch64, armv7, armv6 ]
        include:
          - support-package-url: ""
          - arch: aarch64
            support-package-abi: aarch64-unknown-linux-gnu
          - arch: armv7
            support-package-abi: armv7-unknown-linux-gnueabihf
    steps:

      - name: Build Linux System (${{ matrix.arch }})
        uses: uraimo/run-on-arch-action@v3
        with:
          arch: ${{ matrix.arch }}
          distro: bullseye
          githubToken: ${{ github.token }}
          shell: /bin/bash
          env: |
            TERM: dumb
            FORCE_COLOR: 1
            APP_NAME: ${{ env.APP_NAME }}
            APP_DIR: ${{ env.APP_DIR }}
            GUI_INPUT: ${{ env.GUI_INPUT }}
            VENV_DIR: ${{ env.VENV_DIR }}
            SETUP_VENV: ${{ env.SETUP_VENV }}
            CREATE_PROJECT: ${{ env.CREATE_PROJECT }}
          install: |
            apt -y update
            apt -y install --no-install-recommends \
              git gcc python3-dev python3-pip python3-venv libcairo2-dev libgirepository1.0-dev
          run: |
            set -x && echo $(pwd)

            eval $SETUP_VENV
            eval $CREATE_PROJECT

            briefcase create linux system
            briefcase build linux system
            briefcase package linux system

            rm -rf build
            briefcase package linux system

      - name: Build AppImage (${{ matrix.arch }})
        if: matrix.arch != 'armv6'
        uses: uraimo/run-on-arch-action@v3
        with:
          arch: ${{ matrix.arch }}
          distro: bullseye
          githubToken: ${{ github.token }}
          shell: /bin/bash
          env: |
            TERM: dumb
            FORCE_COLOR: 1
            APP_NAME: ${{ env.APP_NAME }}
            APP_DIR: ${{ env.APP_DIR }}
            GUI_INPUT: ${{ env.GUI_INPUT }}
            VENV_DIR: ${{ env.VENV_DIR }}
            SETUP_VENV: ${{ env.SETUP_VENV }}
            CREATE_PROJECT: ${{ env.CREATE_PROJECT }}
            SUPPORT_PACKAGE_URL: ${{ env.SUPPORT_PACKAGE_LOC }}/cpython-3.9-${{ matrix.support-package-abi }}-noopt.tar.gz
          install: |
            apt -y update
            apt -y install --no-install-recommends git gcc python3-dev python3-pip python3-venv \
              libfuse2 libcairo2-dev libgirepository1.0-dev gir1.2-gtk-3.0 file
          run: |
            set -x && echo $(pwd)

            eval $SETUP_VENV
            eval $CREATE_PROJECT

            briefcase create linux appimage --no-docker --config "support_package=\"${SUPPORT_PACKAGE_URL}\""
            briefcase build linux appimage --no-docker
            briefcase package linux appimage --no-docker

            rm -rf build
            briefcase package linux appimage --no-docker --config "support_package=\"${SUPPORT_PACKAGE_URL}\""

      - name: Build Web Static (${{ matrix.arch }})
        uses: uraimo/run-on-arch-action@v3
        with:
          arch: ${{ matrix.arch }}
          distro: bullseye
          githubToken: ${{ github.token }}
          shell: /bin/bash
          env: |
            TERM: dumb
            FORCE_COLOR: 1
            APP_NAME: ${{ env.APP_NAME }}
            APP_DIR: ${{ env.APP_DIR }}
            GUI_INPUT: ${{ env.GUI_INPUT }}
            VENV_DIR: ${{ env.VENV_DIR }}
            SETUP_VENV: ${{ env.SETUP_VENV }}
            CREATE_PROJECT: ${{ env.CREATE_PROJECT }}
          install: |
            apt -y update
            apt -y install --no-install-recommends git gcc python3-dev python3-pip python3-venv
          run: |
            set -x && echo $(pwd)

            eval $SETUP_VENV
            eval $CREATE_PROJECT

            briefcase create web static
            briefcase build web static
            briefcase package web static

            rm -rf build
            briefcase package web static

  build-self-hosted:
    name: App Build (aarch64 self-hosted)
    runs-on: [self-hosted, linux, ARM64]
    env:
      PIP_CACHE_DIR: /runner/pip.cache
      JAVA_HOME: /runner/java17
      ANDROID_HOME: /runner/android_sdk
      BRIEFCASE_HOME: /runner/briefcase
    steps:
      # these are currently already exist in the docker image
      #- name: Install Prerequisites
      #  run: |
      #    sudo apt update
      #    sudo apt install -y --no-install-recommends python3-dev python3-venv

      - name: Setup Virtual Environment
        run: eval $SETUP_VENV

      - name: Build Linux System App (RPM, Docker)
        # use the bind mount so docker-in-docker works
        working-directory: /runner/work/briefcase-arch-test/briefcase-arch-test/
        run: |
          set -x && echo $(pwd)

          source $VENV_DIR/bin/activate
          eval $CREATE_PROJECT

          briefcase create linux system --target fedora:39
          briefcase build linux system --target fedora:39
          briefcase package linux system --target fedora:39

          rm -rf build
          briefcase package linux system --target fedora:39

      - name: Install Android SDK
        run: |
          set -x && echo $(pwd)
          mkdir -p "$ANDROID_HOME"
          git config --global --add safe.directory "$ANDROID_HOME"
          if [ -z "$(ls -A $ANDROID_HOME/.git)" ]; then
            rm -rf "$ANDROID_HOME"
            git clone https://github.com/rmartin16/briefcase-android-sdk-aarch64.git "$ANDROID_HOME"
          fi
          cd "$ANDROID_HOME"
          git pull origin main

      - name: Build Android App
        run: |
          set -x && echo $(pwd)

          source $VENV_DIR/bin/activate
          eval $CREATE_PROJECT

          briefcase create android
          echo "android.aapt2FromMavenOverride=$ANDROID_HOME/build-tools/aapt2" \
            >> ./build/$APP_DIR/android/gradle/gradle.properties
          briefcase build android
          briefcase package android

          rm -rf android
          briefcase package android

      - name: Build AppImage
        # use the bind mount so docker-in-docker works
        working-directory: /runner/work/briefcase-arch-test/briefcase-arch-test/
        run: |
          set -x && echo $(pwd)

          sudo apt -y update
          sudo apt -y install libfuse2 xvfb libthai-dev libfribidi0 libfontconfig1 libx11-6 libegl1 libgl1 libharfbuzz0b

          source $VENV_DIR/bin/activate
          eval $CREATE_PROJECT

          briefcase create linux appimage --config 'requires=["toga-gtk<0.4.0","PyGobject<3.46.0"]'
          briefcase build linux appimage
          # currently throws an error for dbus connection
          #xvfb-run briefcase run linux AppImage
          briefcase package linux appimage

          rm -rf build
          briefcase package linux appimage --config 'requires=["toga-gtk<0.4.0","PyGobject<3.46.0"]'

      - name: Build Flatpak
        run: |
          set -x && echo $(pwd)

          sudo apt -y update
          sudo apt -y install --no-install-recommends elfutils flatpak flatpak-builder

          source $VENV_DIR/bin/activate
          eval $CREATE_PROJECT

          briefcase create linux flatpak
          briefcase build linux flatpak
          # Flatpak errors when run
          #xvfb-run briefcase run linux flatpak
          briefcase package linux flatpak

          # the Flatpak build cannot be deleted due to "rofiles"
          #rm -rf build
          #briefcase package linux flatpak
